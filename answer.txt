Question:
- If you create a constructor method to build a DVD by title then create a constructor method to build
a DVD by category. Does JAVA allow you to do this?

Yes, Java allows to create multiple constructor methods in a class, a feature known as constructor overloading. This means you can have different constructors with different parameter lists.

15>
After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two
objects still remain?
- In the swap method, you're swapping the references o1 and o2, but this does not affect the original references jungleDVD and cinderellaDVD in the main method. After the swap method is executed, jungleDVD still points to the "jungle" DVD and cinderellaDVD still points to the "Cinderella" DVD.

After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is
the title of the JungleDVD changed?
- The title of jungleDVD is changed because jungleDVD and dvd are referencing the same object. When you modify the object through one reference (dvd in this case), the change is visible through all references to that object (jungleDVD in this case).

- Question: Is JAVA a Pass by Value or a Pass by Reference programming language?
Java is a "pass-by-value" language.

When you pass a variable (whether it's a primitive type like int or an object reference) to a method in Java, a copy of that variable is made and passed to the method. This means that changes made to the parameter inside the method do not affect the original variable in the calling code.

However, it's important to understand that in the case of objects, what is being passed is the reference to the object in memory, not the actual object itself. This can sometimes lead to confusion, as it might seem like Java is "passing by reference", but it's important to distinguish between passing a reference (by value) and passing the actual object.

In summary, in Java:

For primitive types, a copy of the value is passed to the method.
For objects, a copy of the reference to the object is passed to the method.

Please write a swap() method that can correctly swap the two objects:
 public static void swap(DigitalVideoDisc dvd1, DigitalVideoDisc dvd2) {
        String tmpTitle = dvd1.getTitle();
        dvd1.setTitle(dvd2.getTitle());
        dvd2.setTitle(tmpTitle);
    }


